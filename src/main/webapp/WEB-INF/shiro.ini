#
# Copyright (c) 2013 Les Hazlewood and contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# INI configuration is very powerful and flexible, while still remaining succinct.
# Please http://shiro.apache.org/configuration.html and
# http://shiro.apache.org/web.html for more.

[main]

# Let's use some in-memory caching to reduce the number of runtime lookups against Stormpath.  A real
# application might want to use a more robust caching solution (e.g. ehcache or a distributed cache).  When using such
# caches, be aware of your cache TTL settings: too high a TTL and the cache won't reflect any potential
# changes in Stormpath fast enough.  Too low and the cache could evict too often, reducing performance.
#cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
#securityManager.cacheManager = $cacheManager

# Configure a Realm to connect to a user datastore.  In this simple tutorial, we'll just point to Stormpath since it
# takes 5 minutes to set up:
#stormpathClient = com.stormpath.shiro.client.ClientFactory
#stormpathClient.cacheManager = $cacheManager

# (Optional) If you put your apiKey.properties in the non-default location, you set the location here
#stormpathClient.apiKeyFileLocation = $HOME/.stormpath/apiKey.properties

#stormpathRealm = com.stormpath.shiro.realm.ApplicationRealm
#stormpathRealm.client = $stormpathClient

# Find this URL in your Stormpath console for an application you create:
# Applications -> (choose application name) --> Details --> REST URL
# (Optional) If you only have one Application
#stormpathRealm.applicationRestUrl = https://api.stormpath.com/v1/applications/$STORMPATH_APPLICATION_ID

#stormpathRealm.groupRoleResolver.modeNames = name
#securityManager.realm = $stormpathRealm

shiro.loginUrl = /login.jsp

dataSource=org.springframework.jdbc.datasource.DriverManagerDataSource
dataSource.driverClassName=com.mysql.cj.jdbc.Driver
dataSource.url=jdbc:mysql://ddvudo.top:3306/how2jdb?characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false&allowMultiQueries=true
dataSource.username=how2j
dataSource.password=liukang

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true  
jdbcRealm.dataSource=$dataSource
#用户认证(登录)查询语句，以用户名为查询条件
jdbcRealm.authenticationQuery = SELECT password FROM usertable WHERE name = ?  
#用户角色查询语句，以用户名为查询条件，判断用户是否拥有某个角色
jdbcRealm.userRolesQuery = select r.name from usertable u right JOIN user_role_map ur on ur.userid = u.id RIGHT JOIN roletable r on r.id = ur.roleid where u.name = ?
#资源许可查询语句，以角色名称为查询条件，判断角色是否拥有某个资源的许可
jdbcRealm.permissionsQuery = select res.name from roletable r RIGHT JOIN role_res_map rr on r.id = rr.roleid right join Resourcetable res on res.id = rr.resid where r.name = ?

[urls]
/login.jsp = authc
/logout = logout
/account/** = authc
/rolecheck/** = authc,roles[Captains]